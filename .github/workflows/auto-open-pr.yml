name: Auto Open PR

on:
  push:
    branches:
      - 'test/**'
      - 'docs/**'
      - 'chore/**'
  workflow_dispatch:

jobs:
  open-pr:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      contents: read
    steps:
      - name: Extract branch name
        id: vars
        run: |
          echo "branch=${GITHUB_REF#refs/heads/}" >> $GITHUB_OUTPUT
      - name: Create pull request
        uses: actions/github-script@v7
        with:
          script: |
            const branch = '${{ steps.vars.outputs.branch }}'
            const base = 'main'
            const title = branch.startsWith('test/')
              ? `test: ${branch.replace('test/', '')}`
              : branch.startsWith('docs/')
              ? `docs: ${branch.replace('docs/', '')}`
              : branch.startsWith('chore/')
              ? `chore: ${branch.replace('chore/', '')}`
              : branch
            const body = `Automated PR for branch \`${branch}\`.\n\n- Base: \`${base}\`\n- Head: \`${branch}\`\n\nThis PR was opened by a workflow.`

            try {
              const { data: existing } = await github.rest.pulls.list({
                owner: context.repo.owner,
                repo: context.repo.repo,
                head: `${context.repo.owner}:${branch}`,
                state: 'open',
              })
              let prNumber
              if (existing.length) {
                prNumber = existing[0].number
                core.info(`PR already exists: #${prNumber}`)
              } else {
                const { data: pr } = await github.rest.pulls.create({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  head: branch,
                  base,
                  title,
                  body,
                  maintainer_can_modify: true,
                  draft: false,
                })
                prNumber = pr.number
                core.info(`Opened PR #${prNumber}`)
              }

              // Attempt to request reviewers from .github/reviewers.json
              try {
                const res = await github.rest.repos.getContent({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  path: '.github/reviewers.json',
                })
                let content = ''
                if (Array.isArray(res.data)) {
                  core.info('reviewers.json path resolved to directory unexpectedly')
                } else {
                  content = Buffer.from(res.data.content, res.data.encoding).toString()
                }
                const cfg = content ? JSON.parse(content) : {}
                const prefix = branch.includes('/') ? branch.split('/')[0] : ''
                let reviewers = (cfg.byPrefix && cfg.byPrefix[prefix]) || cfg.defaults || []
                reviewers = (reviewers || []).filter(r => r && typeof r === 'string' && !r.includes('<'))
                if (reviewers.length) {
                  await github.rest.pulls.requestReviewers({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    pull_number: prNumber,
                    reviewers,
                  })
                  core.info(`Requested reviewers: ${reviewers.join(', ')}`)
                } else {
                  core.info('No reviewers configured or placeholders detected; skipping reviewer request')
                }
              } catch (e) {
                core.warning(`Unable to request reviewers: ${e.message}`)
              }
            } catch (err) {
              core.setFailed(err.message)
            }
